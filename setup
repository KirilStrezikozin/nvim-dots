#!/bin/bash
# This script sets up my neovim configuration by installing the necessary
# dependencies and cloning config files.

BOLD="\033[1m"
NORMAL="\033[0m"

RED="\033[0;31m"
GREEN="\033[0;32m"

ERRORS=0

echo -e        "-----------------------------------------"
echo -e "${BOLD}Skempl's nvim setup on top of AstroNvim${NORMAL}"
echo -e        "-----------------------------------------"
echo "This script will:"
echo "1. Backup and clean nvim folders."
echo "2. Clone skempl's nvim config via SSH."
echo

script_path="$(readlink -f "$0")"
forbidden_path="$HOME/.config/nvim"
if [ ! -z "$(find "$forbidden_path" -type f -wholename "$script_path" -print -quit)" ]; then
    echo -e "${RED}${BOLD}Setup must not be located inside nvim directory.${NORMAL}"
    exit 1
fi

echo -en "${BOLD}Install dependencies with pacman (Arch only)? (Y/n) ${NORMAL}"
read -n 1 -r
echo
if [[ -z "$REPLY" || $REPLY =~ ^[Yy]$ ]]; then
    sudo pacman -S ripgrep lazygit gdu bottom python3 nodejs-lts-hydrogen --needed
fi

deps=("ripgrep" "lazygit" "gdu" "bottom" "python3" "nodejs-lts-hydrogen")
for dep in "${deps[@]}"; do
    if ! type "$dep" >/dev/null 2>&1; then
        echo -e "${RED}$dep is not installed.${NORMAL}"
        ((ERRORS++))
    fi
done

echo -e "${GREEN}Finished installing dependencies.${NORMAL}"
echo

echo -en "${BOLD}Make a nvim configuration backup? (Y/n) ${NORMAL}"
read -n 1 -r
echo
if [[ -z "$REPLY" || $REPLY =~ ^[Yy]$ ]]; then
    mv ~/.config/nvim ~/.config/nvim.bak

    mv ~/.local/share/nvim ~/.local/share/nvim.bak
    mv ~/.local/state/nvim ~/.local/state/nvim.bak
    mv ~/.cache/nvim ~/.cache/nvim.bak

    echo -e "${GREEN}Backup was successfully saved.${NORMAL}"
fi

echo

echo -en "${BOLD}Cloning skempl's nvim config...${NORMAL}"
git clone --depth 1 git@github.com:KirilStrezikozin/nvim-dots.git ~/.config/nvim

echo

if [[ ! $ERRORS -eq 0 ]]; then
    echo -e "${RED}${BOLD}Setup finished with ${ERRORS} errors.${NORMAL}"
    exit 1
fi

echo -e "${GREEN}${BOLD}Setup finished successfully.${NORMAL}"
exit 0
